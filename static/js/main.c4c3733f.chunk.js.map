{"version":3,"sources":["App/App.styles.js","components/FeedbackOptions/FeedbackOptions.styles.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.styles.js","components/Section/Section.js","components/Statistics/Statistics.styles.js","components/Statistics/Statistics.js","App/App.js","index.js"],"names":["Container","styled","div","Notification","p","List","ul","Item","li","Btn","button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Title","h2","Section","title","children","Statistics","good","neutral","bad","total","positivePercent","App","useState","setGood","setNeutral","setBad","countTotal","Object","keys","Math","round","countPositivePercent","feedback","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEaA,EAAYC,IAAOC,IAAV,gLASTC,EAAeF,IAAOG,EAAV,sFCTZC,EAAOJ,IAAOK,GAAV,0EAKJC,EAAON,IAAOO,GAAV,kFAMJC,EAAMR,IAAOS,OAAV,oR,OCODC,I,IAAAA,EAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/B,OACD,cAACR,EAAD,UACGO,EAAQE,KAAI,SAACC,GAAD,OACX,cAACR,EAAD,UACE,cAACE,EAAD,CAAKO,QAAS,kBAAKH,EAAgBE,IAAnC,SAA6CA,KADpCA,SCLNf,EAAYC,IAAOC,IAAV,4BAETe,EAAQhB,IAAOiB,GAAV,+GCaHC,I,IAAAA,EAdf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,eAAC,EAAD,WACI,cAACJ,EAAD,UAAQG,IACPC,MCLAhB,EAAOJ,IAAOK,GAAV,0BAEJC,EAAON,IAAOO,GAAV,sIC6BFc,MA9Bf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,gBAC7C,OACI,eAAC,EAAD,WACI,eAAC,EAAD,oBACWJ,KAEX,eAAC,EAAD,uBACcC,KAEd,eAAC,EAAD,mBACUC,KAEV,eAAC,EAAD,qBACWC,KAEX,eAAC,EAAD,wBACeC,EADf,YC6CGC,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAoBMC,EAAa,WACjB,OAAOV,EAAOC,EAAUC,GAQpBb,EAAUsB,OAAOC,KAAK,CAAEZ,OAAMC,UAASC,QACvCC,EAAQO,IACRN,EAPuB,WAC3B,IAAMD,EAAQO,IACd,OAAOG,KAAKC,MAAMd,EAAOG,EAAQ,KAKXY,GAEtB,OACE,eAACtC,EAAD,WACE,cAAC,EAAD,CAASoB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACER,QAASA,EACTC,gBApCc,SAAC0B,GACvB,OAAQA,GACN,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAeA,EAAY,KACnC,MAEF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAeA,EAAY,KACtC,MAEF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aAwBA,cAAC,EAAD,CAASpB,MAAO,aAAhB,SACa,IAAVM,EAAc,cAAC,EAAD,CACTH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,gBAAiBA,IAAsB,cAACxB,EAAD,UAAe,4BCnDtEsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.c4c3733f.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\ntext-align: center;\nmargin: 20px auto;\npadding:20px;\nbackground-color: #fff;\nwidth: 800px;\nbox-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n`;\n\nexport const Notification = styled.p`\nfont-size: 40px;\ntext-align: center;\ncolor: #a13d84c3;\n`;","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 50px;\n  }\n`;\n\nexport const Btn = styled.button`\n  min-width: 200px;\n  height: 50px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 18px;\n  color: #fff;\n  text-transform: uppercase;\n  background-color: #ff0d82;\n  box-shadow: 0px 0px 8px 0px rgba(34, 60, 80, 0.2);\n  border: none;\n`;\n","import PropTypes from \"prop-types\";\nimport { List, Item, Btn} from \"./FeedbackOptions.styles\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n     return (\n    <List>\n      {options.map((option) => (\n        <Item key={option}>\n          <Btn onClick={()=> onLeaveFeedback(option)}>{option}</Btn>\n        </Item>\n      ))}\n    </List>\n  );\n}\n\nFeedbackOptions.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n`;\nexport const Title = styled.h2`\ntext-align: center;\npadding-top: 45px;\npadding-bottom: 25px;\ncolor: #9e1878;\n\n`;","import PropTypes from \"prop-types\";\nimport { Container, Title } from \"./Section.styles\";\n\nfunction Section({title, children}) {\n    return (\n        <Container>\n            <Title>{title}</Title>\n            {children}\n        </Container>\n    );\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul``;\n\nexport const Item = styled.li`\nfont-size: 20px;\ntext-transform: uppercase;\nmargin-bottom: 15px;\ncolor: #ff0d82;\nfont-weight: 800px;\n`;","import PropTypes from \"prop-types\";\nimport { List, Item } from \"./Statistics.styles\";\n\nfunction Statistics({ good, neutral, bad, total, positivePercent}) {\n    return (\n        <List>\n            <Item>\n                Good: {good}\n            </Item>\n            <Item>\n                Neutral: {neutral}\n            </Item>\n            <Item>\n                Bad: {bad}\n           </Item>\n            <Item>\n               Total: {total}\n            </Item>\n            <Item>\n                Positive: {positivePercent} %\n            </Item>\n        </List>\n    );\n}\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercent: PropTypes.number.isRequired,\n};\n\nexport default Statistics;","import { useState } from \"react\";\nimport { Container, Notification } from \"./App.styles\";\nimport FeedbackOptions from \"../components/FeedbackOptions\";\nimport Section from \"../components/Section\";\nimport Statistics from \"../components/Statistics\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = (feedback) => {\n    switch (feedback) {\n      case 'good':\n        setGood((prevState) => prevState + 1)\n        break\n\n      case 'neutral':\n        setNeutral((prevState) => prevState + 1)\n        break\n\n      case 'bad':\n        setBad((prevState) => prevState + 1)\n        break\n\n      default:\n        return\n    }};\n\n  const countTotal = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositivePercent = () => {\n    const total = countTotal();\n    return Math.round(good / total * 100);\n  };\n\n  const options = Object.keys({ good, neutral, bad });\n  const total = countTotal();\n  const positivePercent = countPositivePercent();\n  \n    return (\n      <Container>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={options}\n            onLeaveFeedback={onLeaveFeedback}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {total !== 0 ? <Statistics\n                good={good}\n                neutral={neutral}\n                bad={bad}\n                total={total}\n                positivePercent={positivePercent} /> : <Notification>{\"No feedback given\"}</Notification>}\n       </Section>\n     </Container>\n    );\n  }\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}